plugins {
    id 'idea'
    id 'java'
    id 'org.jetbrains.intellij' version '0.6.5'
}

group 'com.redhat.devtools.intellij'
version projectVersion

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://repository.jboss.org' }
}

def versionsMap = ['IU-2019.3':'193.5233.144','IU-2020.1':'201.6668.99', 'IU-2020.2':'202.6397.93', 'IU-2020.3':'203.5981.152', 'IU-2021.1':'211.6693.108']

intellij {
    version ideaVersion
    pluginName 'Knative by Red Hat'
    plugins 'terminal', 'yaml', 'com.intellij.kubernetes:' + versionsMap[ideaVersion], 'com.redhat.devtools.intellij.kubernetes:0.1.6.32'
    updateSinceUntilBuild false
}

dependencies {
    compile 'com.redhat.devtools.intellij:intellij-common:1.2.0-SNAPSHOT'
    testCompile 'org.mockito:mockito-inline:3.8.0'
    compile 'com.squareup.okio:okio:1.15.0'
}

configurations {
    compile {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

sourceSets {
    integrationTest {
        java.srcDir file('src/it/java')
        resources.srcDir file('src/it/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    mustRunAfter test
}

publishPlugin {
    token    jetBrainsToken
    channels jetBrainsChannel
}
